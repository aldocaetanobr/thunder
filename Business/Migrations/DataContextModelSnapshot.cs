// <auto-generated />
using System;
using Business.Dto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Business.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.TarefaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Conclusao")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Inicio")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("Vencimento")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("Conclusao")
                        .HasDatabaseName("IX_tarefas_conclusao");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_tarefas_CreatedAt");

                    b.HasIndex("Inicio")
                        .HasDatabaseName("IX_tarefas_inicio");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_tarefas_status");

                    b.HasIndex("Titulo")
                        .HasDatabaseName("IX_tarefas_titulo");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_tarefas_UpdatedAt");

                    b.HasIndex("Vencimento")
                        .HasDatabaseName("IX_tarefas_vencimento");

                    b.ToTable("tarefas", (string)null);
                });

            modelBuilder.Entity("Models.TarefaUsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("TarefaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_tarefas_usuarios_CreatedAt");

                    b.HasIndex("TarefaId");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_tarefas_usuarios_UpdatedAt");

                    b.HasIndex("UsuarioId");

                    b.ToTable("tarefas_usuarios", (string)null);
                });

            modelBuilder.Entity("Models.UsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_usuarios_ativo");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_usuarios_CreatedAt");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_usuarios_name");

                    b.HasIndex("UpdatedAt")
                        .HasDatabaseName("IX_usuarios_UpdatedAt");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Models.TarefaUsuarioModel", b =>
                {
                    b.HasOne("Models.TarefaModel", "Tarefa")
                        .WithMany("TarefasUsuarios")
                        .HasForeignKey("TarefaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.UsuarioModel", "Usuario")
                        .WithMany("TarefasUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Models.TarefaModel", b =>
                {
                    b.Navigation("TarefasUsuarios");
                });

            modelBuilder.Entity("Models.UsuarioModel", b =>
                {
                    b.Navigation("TarefasUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
